body {
	background-color: #fff;
	font-family: helvetica, sans-serif;
	padding: 3% 4%;
	margin: 0;
}
.demo-nav {
	margin: 1em 0;
	padding: 0;
	list-style-type: none;
}
.demo-nav li {
	display: inline-block;
	padding-right: 1em;
	border-right: 1px solid #ddd;
	margin: .5em 1em .5em 0;
}
.demo-nav li:last-child {
	padding-right: 0;
	border-right: none;
	margin-right: 0;
}
h2 {
	margin: 2em 0 1em;
}
.clearfix:before,
.clearfix:after {
	content: " ";
	display: table;
}
.clearfix:after {
	clear: both;
}
// For IE 6/7 (trigger hasLayout)
.clearfix {
	*zoom: 1;
}


/* Layout styles */

/* Generic section classes can be used for interior columns that can be scoped to 
break into cols at different breakpoints; wrap them in a .inner-layout container */
.sect-inner-a,
.sect-inner-b {
	width: 48%;
}
.sect-inner-a {
	float: left;
}
.sect-inner-b {
	float: right;
}


/* Use this for labels/elements that are in the markup purely for audible/accessibility purposes, and are always hidden */
.a11y-only {
	position: absolute !important;
	height: 1px;
	width: 1px;
	overflow: hidden;
	clip: rect(1px 1px 1px 1px); /* IE6, IE7 */
	clip: rect(1px, 1px, 1px, 1px);
}

.form-group,
.form-group.checkbox,
.form-group.radiobutton {
	clear: both;
	margin: 0 0 1.5em;
	display: block;
	position: relative;
}
.form-group.sect-inner-b {
	clear: none;
}
.button.btn-mask-pw {
	position: absolute;
	top: -1.2em;
	right: 0;
	width: auto;
}

.form-btns.sect-inner-a,
.form-btns.sect-inner-b {
	margin-top: 1em;
}


/* Placeholder text in form elements - each rule must remain separate to work */
::-webkit-input-placeholder {
	font: normal 16px/1.3 helvetica, sans-serif;
	color: #bbb;
}
:-moz-placeholder { /* Firefox 18- */
	font: normal 16px/1.3 helvetica, sans-serif;
	color: #bbb;
}
::-moz-placeholder {  /* Firefox 19+ */
	font: normal 16px/1.3 helvetica, sans-serif;
	color: #bbb;
}
:-ms-input-placeholder {
	font: normal 16px/1.3 helvetica, sans-serif;
	color: #bbb;
}


/* Use a separate class/element for label text so child elements don't inherit styles */
.label-text, 
.helper {
	font-size: .7em;	
}
.label-text {
	display: block;
	margin: 0 0 .3em;
	color: #777;
	font-weight: normal;
	text-transform: uppercase;
	position: relative;
}
.required .label-text:after {
	content: "*";
	color: #DC0014;
	margin-left: .3em;
}


/* Button-like styling for inputs and button elements */
.button, 
textarea,
input,
select {
	font: bold 16px/1.3 helvetica, sans-serif; /* 16px = magic font size number to prevent iOS text zoom */
	padding: .6em 16px;
}
.button,
textarea,
input[type="text"],
input[type="search"],
input[type="number"],
input[type="password"],
input[type="email"],
input[type="url"],
input[type="tel"],
input[type="number"],
input[type="date"],
input[type="datetime"],
input[type="month"],
input[type="time"],
input[type="week"],
input[type="file"] {
	display: block;
	width: 100%;
	border: 1px solid #bbb;
	border-radius: .3em;	
	color: #444;
}
input[type="file"] {
	align-items: bottom; 
}
input[type="checkbox"],
input[type="radio"] {
	padding: 0;
	border: 0;
}
/* experiment to see if we can account for the inset border in search field: */
input[type="search"] {
	padding-left: 10px;
}
textarea,
input[type="text"],
input[type="search"],
input[type="number"],
input[type="password"],
input[type="email"],
input[type="url"],
input[type="tel"],
input[type="number"],
input[type="date"],
input[type="datetime"],
input[type="month"],
input[type="time"],
input[type="week"] {
	box-shadow: inset 0 1px 1px 2px rgba(0,0,0,.05);
	background: none;
	outline: none;

	/* prefixed box-sizing rules necessary for older browsers */
	-webkit-box-sizing: border-box;
	-moz-box-sizing: border-box;
	box-sizing: border-box;

	/* undo browser styling */
	appearance: none;
	-webkit-appearance: none;
}

/* opt out of spinner in numeric inputs */
input[type=number].text-number::-webkit-inner-spin-button, 
input[type=number].text-number::-webkit-outer-spin-button { 
	-webkit-appearance: none; 
	margin: 0; 
}

.button {
	display: inline-block;
	text-decoration: none;
	box-shadow: 0 1px 0 1px rgba(0,0,0,.04);
	background: #f3f3f3; /* Old browsers */
	background: -moz-linear-gradient(top, #ffffff 0%, #e5e5e5 100%); /* FF3.6+ */
	background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,#ffffff), color-stop(100%,#e5e5e5)); /* Chrome,Safari4+ */
	background: -webkit-linear-gradient(top, #ffffff 0%,#e5e5e5 100%); /* Chrome10+,Safari5.1+ */
	background: -o-linear-gradient(top, #ffffff 0%,#e5e5e5 100%); /* Opera 11.10+ */
	background: -ms-linear-gradient(top, #ffffff 0%,#e5e5e5 100%); /* IE10+ */
	background: linear-gradient(to bottom, #ffffff 0%,#e5e5e5 100%); /* W3C */
	filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#ffffff', endColorstr='#e5e5e5',GradientType=0 ); /* IE6-9 */
}
.button.btn-small {
	font-size: .6em;
	padding: .5em 8px .4em;
	text-transform: uppercase;
}
.btn-submit {
	margin: 0 0 2em;
	max-width: 200px;
	float: right;
}

/* Check & radio */
.checkbox,
.radiobutton {
	clear: both;
	float: left;
	width: 100%;
	margin: 0 0 .5em;
	font-size: .9em;
}
.checkbox input,
.radiobutton input {
	float: left;
	margin: 0 8px 0 0;
}
.checkbox .item,
.radiobutton .item {
	float: left;
	max-width: 80%;
}
.checkbox .item b,
.radiobutton .item b {
	font-family: $fontSemiBold;
}
.checkbox .item-desc,
.radiobutton .item-desc {
	font-size: .9em;
	display: block;
	color: $gray-tertiary;
}


/* Custom-styled select */
.custom-select {
	position: relative;
	display: block;
	overflow: hidden;
}
.custom-select.button {
	padding: 0; /* Padding is applied to child select instead */
}

/* For the select element itself we negate every style except the text so we can see the button styles in the wrapper */
.custom-select select {
	width: 100%;
	margin: 0;
	background: none;
	border: 1px solid transparent;
	outline: none;
/* prefixed box-sizing rules necessary for older browsers */
	-webkit-box-sizing: border-box;
	-moz-box-sizing: border-box;
	box-sizing: border-box;
/* remove select styling */
	appearance: none;
	-webkit-appearance: none;
}
.custom-select option {
	font-weight: normal;
}

/* Custom arrow sits on top of the select - could be an image, SVG, icon font, etc. or the arrow could just baked into the bg image on the select */
.custom-select:after {
	content: "";
	position: absolute;
	width: 9px;
	height: 8px;
	top: 50%;
	right: 1em;
	margin-top: -4px;
	background: url(http://filamentgroup.com/files/select-arrow.png) no-repeat;
	background-size: 100%;
	z-index: 2;
/* make the select behind the arrow clickable in some browsers */
	pointer-events: none;
}

/* IE 10/11+ */
/* Hide the native dropdown button arrow so it will have the custom appearance (IE 9 and earlier get a native select) */
_:-ms-input-placeholder, :root .custom-select select::-ms-expand {
	display: none;
}
/* Remove the odd blue bg color behind the text */
_:-ms-input-placeholder, :root .custom-select select:focus::-ms-value {
	background: transparent;
}

/* Firefox >= 2 
Older versions of FF (v2 - 6) won't let us hide the native select arrow, so we'll just hide the custom icon and go with native styling */
/* Show only the native arrow */
body:last-child .custom-select:after, x:-moz-any-link {
	display: none;
}
/* Reduce padding */
body:last-child .custom-select select, x:-moz-any-link {
	padding-right: .8em;
}

/* Firefox 7+
Will let us hide the arrow, but inconsistently (see FF 30 comment below). We've found the simplest way to hide the native styling in FF is to make the select bigger than its container. */
/* The specific FF selector used below successfully overrides the previous rule that turns off the custom icon; other FF hacky selectors we tried, like `*>.custom-select:after`, did not undo the previous rule */
/* Show only the custom icon */
_::-moz-progress-bar, body:last-child .custom-select:after {
	display: block;
}    
_::-moz-progress-bar, body:last-child .custom-select select {
/* increase padding to make room for menu icon */
	padding-right: 1.9em;
/* `window` appearance with these text-indent and text-overflow values will hide the arrow FF up to v30 */
	-moz-appearance: window;
	text-indent: 0.01px;
	text-overflow: "";
/* for FF 30+ on Windows 8, we need to make the select a bit longer to hide the native arrow */
	width: 110%;
}

/* Firefox 7+ focus style
This works around the issue that -moz-appearance: window  kills the normal select focus. Using semi-opaque because outline doesn't handle rounded corners */
_::-moz-progress-bar, body:last-child .custom-select select:focus {
	outline: 2px solid rgba(180,222,250, .7);
}

/* Opera - Pre-Blink nix the custom arrow, go with a native select button */
x:-o-prefocus, .custom-select:after {
	display: none;
}

/* Firefox: remove weird focus artifact around the text */
.custom-select select:-moz-focusring {
	color: transparent;
	text-shadow: 0 0 0 #000;
}


/* feedback states */
.button:focus, 
textarea:focus,
input:focus,
select:focus  {
	outline: none;
	box-shadow: 0 0 0 3px rgba(180,222,250, .75);
}
input[type="checkbox"] {
	border-radius: 10%;
}
input[type="radio"] {
	border-radius: 100%;
}

.disabled .label-text,
input[disabled],
select[disabled],
textarea[disabled] {
	cursor: default;
	text-shadow: none;
	box-shadow: none;
	opacity: .5;
}
input[type="file"][disabled] {
	background-color: transparent;
}

.error-msg {
	margin: .3em 0 0;
	font-size: .8em;
}
.invalid .error-msg {
	color: #DC0014;
}
.invalid input,
.invalid select,
.invalid textarea {
	border-color: #DC0014;
}


@media ( min-width: 600px ) {
	.layout-a .sect-a,
	.layout-a .sect-b {
		float: left;
		width: 47%;
	}
	.layout-a .sect-b {
		float: right;
		padding-left: 3%;
		border-left: 1px solid #ddd;
	}

}

@media ( min-width: 900px ) {
	.has-helper {
		padding-right: 32%;
	}
	.helper { /* instruction text that appears next to input */
		position: absolute;
		left: 103%;
		top: 1.3em;
		min-width: 42%;
	}
}